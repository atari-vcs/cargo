--- a/src/linux_and_more.rs
+++ b/src/linux_and_more.rs
@@ -1,11 +1,8 @@
 use crate::OpenError;
 use std::ffi::OsStr;
-use std::io::Write;
 use std::process::{Child, Command, Stdio};
 use std::{fs, io};
 
-const XDG_OPEN_SCRIPT: &[u8] = include_bytes!("xdg-open");
-
 pub(crate) fn open(path: &OsStr) -> Result<(), OpenError> {
     if crate::is_wsl() {
         wsl_open(path)
@@ -26,10 +23,7 @@
 }
 
 fn non_wsl_open(path: &OsStr) -> Result<(), OpenError> {
-    if open_with_system_xdg_open(path).is_err() {
-        open_with_internal_xdg_open(path)?;
-    }
-
+    open_with_system_xdg_open(path).map_err(OpenError::Io)?;
     Ok(())
 }
 
@@ -58,25 +52,6 @@
         .spawn()
 }
 
-fn open_with_internal_xdg_open(path: &OsStr) -> Result<Child, OpenError> {
-    let mut sh = Command::new("sh")
-        .arg("-s")
-        .arg(path)
-        .stdin(Stdio::piped())
-        .stdout(Stdio::null())
-        .stderr(Stdio::null())
-        .spawn()
-        .map_err(OpenError::Io)?;
-
-    sh.stdin
-        .as_mut()
-        .unwrap()
-        .write_all(XDG_OPEN_SCRIPT)
-        .map_err(OpenError::Io)?;
-
-    Ok(sh)
-}
-
 pub(crate) fn is_wsl() -> bool {
     if is_docker() {
         return false;
