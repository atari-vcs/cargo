diff --git a/src/commoncrypto-sys/debian/patches/no-clippy.patch b/src/commoncrypto-sys/debian/patches/no-clippy.patch
index 3e4c8850..93789f3b 100644
--- a/src/commoncrypto-sys/debian/patches/no-clippy.patch
+++ b/src/commoncrypto-sys/debian/patches/no-clippy.patch
@@ -1,17 +1,16 @@
---- a/Cargo.toml	2017-01-24 06:56:51.000000000 +0000
-+++ b/Cargo.toml	2018-09-15 15:37:47.602333479 +0000
-@@ -19,14 +19,8 @@
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -8,13 +8,8 @@
  keywords = ["crypto", "hash", "digest", "osx", "commoncrypto"]
  license = "MIT"
- repository = "https://github.com/malept/rust-commoncrypto"
--[dependencies.clippy]
--version = "0.0"
--optional = true
  
- [dependencies.libc]
- version = "0.2"
- [dev-dependencies.hex]
- version = "0.2"
--
 -[features]
 -lint = ["clippy"]
+-
+ [dependencies]
+ libc = "0.2"
+ 
+-clippy = { version = "0.0", optional = true }
+-
+ [dev-dependencies]
+ hex = "0.2"
diff --git a/src/commoncrypto/debian/patches/no-clippy.patch b/src/commoncrypto/debian/patches/no-clippy.patch
index 38d9c925..b21a7cae 100644
--- a/src/commoncrypto/debian/patches/no-clippy.patch
+++ b/src/commoncrypto/debian/patches/no-clippy.patch
@@ -1,17 +1,16 @@
---- a/Cargo.toml	2017-01-24 06:56:51.000000000 +0000
-+++ b/Cargo.toml	2018-09-15 17:37:01.354423224 +0000
-@@ -19,14 +19,8 @@
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -8,13 +8,8 @@
  keywords = ["crypto", "hash", "digest", "osx", "commoncrypto"]
  license = "MIT"
- repository = "https://github.com/malept/rust-commoncrypto"
--[dependencies.clippy]
--version = "0.0"
--optional = true
  
- [dependencies.commoncrypto-sys]
- version = "0.2.0"
- [dev-dependencies.hex]
- version = "0.2"
--
 -[features]
 -lint = ["clippy"]
+-
+ [dependencies]
+ commoncrypto-sys = { version = "0.2.0", path = "../commoncrypto-sys" }
+ 
+-clippy = { version = "0.0", optional = true }
+-
+ [dev-dependencies]
+ hex = "0.2"
diff --git a/src/crossbeam-utils/debian/patches/series b/src/crossbeam-utils/debian/patches/series
index 75abb7f1..e69de29b 100644
--- a/src/crossbeam-utils/debian/patches/series
+++ b/src/crossbeam-utils/debian/patches/series
@@ -1 +0,0 @@
-relax-dep.diff
diff --git a/src/curl-sys/debian/patches/disable-libz-sys.patch b/src/curl-sys/debian/patches/disable-libz-sys.patch
index 5dbfba62..8047e9bb 100644
--- a/src/curl-sys/debian/patches/disable-libz-sys.patch
+++ b/src/curl-sys/debian/patches/disable-libz-sys.patch
@@ -1,8 +1,6 @@
-Index: curl-sys/Cargo.toml
-===================================================================
---- curl-sys.orig/Cargo.toml
-+++ curl-sys/Cargo.toml
-@@ -32,11 +32,6 @@ version = "0.2.2"
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -32,11 +32,6 @@
  version = "0.1.3"
  optional = true
  
@@ -14,10 +12,10 @@ Index: curl-sys/Cargo.toml
  [build-dependencies.cc]
  version = "1.0"
  
-@@ -52,7 +47,6 @@ spnego = []
- ssl = ["openssl-sys"]
+@@ -53,7 +48,6 @@
  static-curl = []
  static-ssl = ["openssl-sys"]
+ upkeep_7_62_0 = []
 -zlib-ng-compat = ["libz-sys/zlib-ng", "static-curl"]
  [target."cfg(all(unix, not(target_os = \"macos\")))".dependencies.openssl-sys]
  version = "0.9"
diff --git a/src/curl-sys/debian/patches/disable-vendor.patch b/src/curl-sys/debian/patches/disable-vendor.patch
index 76a19621..f9aa62b3 100644
--- a/src/curl-sys/debian/patches/disable-vendor.patch
+++ b/src/curl-sys/debian/patches/disable-vendor.patch
@@ -1,21 +1,17 @@
-Index: curl-sys/Cargo.toml
-===================================================================
---- curl-sys.orig/Cargo.toml
-+++ curl-sys/Cargo.toml
-@@ -51,7 +51,7 @@ protocol-ftp = []
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -51,7 +51,7 @@
  spnego = []
  ssl = ["openssl-sys"]
  static-curl = []
 -static-ssl = ["openssl-sys/vendored"]
 +static-ssl = ["openssl-sys"]
+ upkeep_7_62_0 = []
  zlib-ng-compat = ["libz-sys/zlib-ng", "static-curl"]
  [target."cfg(all(unix, not(target_os = \"macos\")))".dependencies.openssl-sys]
- version = "0.9"
-Index: curl-sys/build.rs
-===================================================================
---- curl-sys.orig/build.rs
-+++ curl-sys/build.rs
-@@ -19,8 +19,9 @@ fn main() {
+--- a/build.rs
++++ b/build.rs
+@@ -23,8 +23,9 @@
          return println!("cargo:rustc-flags=-l curl");
      }
  
@@ -24,6 +20,6 @@ Index: curl-sys/build.rs
 +    // On Debian, always probe for a system-wide libcurl even when linking statically
 +    if true {
 +        if cfg!(feature = "static-curl") { println!("cargo:static=1"); }
-         // OSX and Haiku ships libcurl by default, so we just use that version
+         // OSX ships libcurl by default, so we just use that version
          // so long as it has the right features enabled.
-         if target.contains("apple") || target.contains("haiku") {
+         if target.contains("apple") && (!cfg!(feature = "http2") || curl_config_reports_http2()) {
diff --git a/src/curl/debian/patches/disable-features.patch b/src/curl/debian/patches/disable-features.patch
index 88156193..a5f1e33a 100644
--- a/src/curl/debian/patches/disable-features.patch
+++ b/src/curl/debian/patches/disable-features.patch
@@ -1,8 +1,6 @@
-Index: curl/Cargo.toml
-===================================================================
---- curl.orig/Cargo.toml
-+++ curl/Cargo.toml
-@@ -53,12 +53,9 @@ version = "2.0.3"
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -63,13 +63,10 @@
  default = ["ssl"]
  force-system-lib-on-osx = ["curl-sys/force-system-lib-on-osx"]
  http2 = ["curl-sys/http2"]
@@ -11,6 +9,7 @@ Index: curl/Cargo.toml
  ssl = ["openssl-sys", "openssl-probe", "curl-sys/ssl"]
  static-curl = ["curl-sys/static-curl"]
  static-ssl = ["curl-sys/static-ssl"]
+ upkeep_7_62_0 = ["curl-sys/upkeep_7_62_0"]
 -zlib-ng-compat = ["curl-sys/zlib-ng-compat", "static-curl"]
  [target."cfg(all(unix, not(target_os = \"macos\")))".dependencies.openssl-probe]
  version = "0.1.2"
diff --git a/src/curl/debian/patches/series b/src/curl/debian/patches/series
index 2bf3bfcc..14a9a79c 100644
--- a/src/curl/debian/patches/series
+++ b/src/curl/debian/patches/series
@@ -1,3 +1,2 @@
 disable-mesalink.patch
 disable-features.patch
-disable-static-with-ftp-disabled-test.patch
diff --git a/src/env-logger/debian/patches/series b/src/env-logger/debian/patches/series
index fa7eaac4..e69de29b 100644
--- a/src/env-logger/debian/patches/series
+++ b/src/env-logger/debian/patches/series
@@ -1 +0,0 @@
-relax-deps.diff
diff --git a/src/getrandom/debian/patches/drop-wasi.patch b/src/getrandom/debian/patches/drop-wasi.patch
index 73cf32ed..b43d82eb 100644
--- a/src/getrandom/debian/patches/drop-wasi.patch
+++ b/src/getrandom/debian/patches/drop-wasi.patch
@@ -1,13 +1,20 @@
-Index: getrandom/Cargo.toml
-===================================================================
---- getrandom.orig/Cargo.toml
-+++ getrandom/Cargo.toml
-@@ -42,8 +42,6 @@ dummy = []
- rustc-dep-of-std = ["compiler_builtins", "core"]
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -40,7 +40,7 @@
+ custom = []
+ js = ["wasm-bindgen", "js-sys"]
+ rdrand = []
+-rustc-dep-of-std = ["compiler_builtins", "core", "libc/rustc-dep-of-std", "wasi/rustc-dep-of-std"]
++rustc-dep-of-std = ["compiler_builtins", "core", "libc/rustc-dep-of-std"]
  std = []
- test-in-browser = ["wasm-bindgen"]
+ test-in-browser = []
+ [target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.js-sys]
+@@ -53,8 +53,6 @@
+ default-features = false
+ [target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dev-dependencies.wasm-bindgen-test]
+ version = "0.3.18"
 -[target."cfg(target_os = \"wasi\")".dependencies.wasi]
--version = "0.9"
+-version = "0.10"
  [target."cfg(unix)".dependencies.libc]
  version = "0.2.64"
  default-features = false
diff --git a/src/git2/debian/patches/disable-vendor.patch b/src/git2/debian/patches/disable-vendor.patch
index a883c58f..526bc033 100644
--- a/src/git2/debian/patches/disable-vendor.patch
+++ b/src/git2/debian/patches/disable-vendor.patch
@@ -1,12 +1,10 @@
-Index: git2/Cargo.toml
-===================================================================
---- git2.orig/Cargo.toml
-+++ git2/Cargo.toml
-@@ -60,7 +60,6 @@ https = ["libgit2-sys/https", "openssl-s
- ssh = ["libgit2-sys/ssh"]
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -57,7 +57,6 @@
  ssh_key_from_memory = ["libgit2-sys/ssh_key_from_memory"]
  unstable = []
--vendored-openssl = ["openssl-sys/vendored"]
+ vendored-libgit2 = ["libgit2-sys/vendored"]
+-vendored-openssl = ["openssl-sys/vendored", "libgit2-sys/vendored-openssl"]
  zlib-ng-compat = ["libgit2-sys/zlib-ng-compat"]
  [target."cfg(all(unix, not(target_os = \"macos\")))".dependencies.openssl-probe]
  version = "0.1"
diff --git a/src/git2/debian/patches/remove-zlib-ng-compat.patch b/src/git2/debian/patches/remove-zlib-ng-compat.patch
index a0b19255..1533e169 100644
--- a/src/git2/debian/patches/remove-zlib-ng-compat.patch
+++ b/src/git2/debian/patches/remove-zlib-ng-compat.patch
@@ -1,11 +1,9 @@
-Index: git2/Cargo.toml
-===================================================================
---- git2.orig/Cargo.toml
-+++ git2/Cargo.toml
-@@ -54,7 +54,6 @@ https = ["libgit2-sys/https", "openssl-s
- ssh = ["libgit2-sys/ssh"]
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -57,7 +57,6 @@
  ssh_key_from_memory = ["libgit2-sys/ssh_key_from_memory"]
  unstable = []
+ vendored-libgit2 = ["libgit2-sys/vendored"]
 -zlib-ng-compat = ["libgit2-sys/zlib-ng-compat"]
  [target."cfg(all(unix, not(target_os = \"macos\")))".dependencies.openssl-probe]
  version = "0.1"
diff --git a/src/ignore/debian/patches/series b/src/ignore/debian/patches/series
index 1cc9a6a1..e69de29b 100644
--- a/src/ignore/debian/patches/series
+++ b/src/ignore/debian/patches/series
@@ -1 +0,0 @@
-fix-dep.diff
diff --git a/src/libgit2-sys/debian/patches/no-special-snowflake-env.patch b/src/libgit2-sys/debian/patches/no-special-snowflake-env.patch
index 88e59b82..55a5a68e 100644
--- a/src/libgit2-sys/debian/patches/no-special-snowflake-env.patch
+++ b/src/libgit2-sys/debian/patches/no-special-snowflake-env.patch
@@ -1,17 +1,17 @@
 --- a/build.rs
 +++ b/build.rs
-@@ -11,7 +11,7 @@
-     // To use zlib-ng in zlib-compat mode, we have to build libgit2 ourselves.
-     if !zlib_ng_compat {
+@@ -14,7 +14,7 @@
+     let try_to_use_system_libgit2 = !vendored && !zlib_ng_compat;
+     if try_to_use_system_libgit2 {
          let mut cfg = pkg_config::Config::new();
--        if let Ok(lib) = cfg.atleast_version("1.0.0").probe("libgit2") {
+-        if let Ok(lib) = cfg.atleast_version("1.1.0").probe("libgit2") {
 +        if let Ok(lib) = cfg.probe("libgit2") {
              for include in &lib.include_paths {
                  println!("cargo:root={}", include.display());
              }
-@@ -19,7 +19,7 @@
-         }
-     }
+@@ -24,7 +24,7 @@
+ 
+     println!("cargo:rustc-cfg=libgit2_vendored");
  
 -    if !Path::new("libgit2/.git").exists() {
 +    if false {
diff --git a/src/libgit2-sys/debian/patches/remove-zlib-ng-compat.patch b/src/libgit2-sys/debian/patches/remove-zlib-ng-compat.patch
index 2e62ae9c..61f50bd5 100644
--- a/src/libgit2-sys/debian/patches/remove-zlib-ng-compat.patch
+++ b/src/libgit2-sys/debian/patches/remove-zlib-ng-compat.patch
@@ -1,9 +1,9 @@
---- libgit2-sys/Cargo.toml	2020-09-08 17:24:05.000000000 +0000
-+++ libgit2-sys/Cargo.toml	2020-12-07 00:15:20.413037311 +0000
-@@ -47,7 +47,6 @@
- https = ["openssl-sys"]
- ssh = ["libssh2-sys"]
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -48,7 +48,6 @@
  ssh_key_from_memory = []
+ vendored = []
+ vendored-openssl = ["openssl-sys/vendored"]
 -zlib-ng-compat = ["libz-sys/zlib-ng", "libssh2-sys/zlib-ng-compat"]
  [target."cfg(unix)".dependencies.openssl-sys]
  version = "0.9"
diff --git a/src/log/debian/patches/ignore-sval.diff b/src/log/debian/patches/ignore-sval.diff
index 47c35a4d..e1eb2dc6 100644
--- a/src/log/debian/patches/ignore-sval.diff
+++ b/src/log/debian/patches/ignore-sval.diff
@@ -1,43 +1,48 @@
-Index: log/Cargo.toml
-===================================================================
---- log.orig/Cargo.toml
-+++ log/Cargo.toml
-@@ -24,7 +24,7 @@ categories = ["development-tools::debugg
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -24,7 +24,7 @@
  license = "MIT OR Apache-2.0"
  repository = "https://github.com/rust-lang/log"
  [package.metadata.docs.rs]
--features = ["std", "serde", "kv_unstable_sval"]
-+features = ["std", "serde"]
+-features = ["std", "serde", "kv_unstable_std", "kv_unstable_sval", "kv_unstable_serde"]
++features = ["std", "serde", "kv_unstable_std", "kv_unstable_serde"]
  
  [[test]]
  name = "filters"
-@@ -41,20 +41,21 @@ version = "1.0"
+@@ -43,10 +43,10 @@
  optional = true
  default-features = false
  
 -[dependencies.sval]
--version = "0.5.2"
+-version = "1.0.0-alpha.5"
 -optional = true
 -default-features = false
-+# [dependencies.sval]
-+# version = "0.5.2"
-+# optional = true
-+# default-features = false
-+
++#[dependencies.sval]
++#version = "1.0.0-alpha.5"
++#optional = true
++#default-features = false
+ 
+ [dependencies.value-bag]
+ version = "1.0.0-alpha.6"
+@@ -59,9 +59,9 @@
  [dev-dependencies.serde_test]
  version = "1.0"
  
 -[dev-dependencies.sval]
--version = "0.5.2"
--features = ["test"]
-+# [dev-dependencies.sval]
-+# version = "0.5.2"
-+# features = ["test"]
+-version = "1.0.0-alpha.5"
+-features = ["derive"]
++#[dev-dependencies.sval]
++#version = "1.0.0-alpha.5"
++#features = ["derive"]
  
- [features]
- kv_unstable = []
--kv_unstable_sval = ["kv_unstable", "sval/fmt"]
-+kv_unstable_sval = ["kv_unstable"]#, "sval/fmt"]
+ [dev-dependencies.value-bag]
+ version = "1.0.0-alpha.6"
+@@ -71,7 +71,7 @@
+ kv_unstable = ["value-bag"]
+ kv_unstable_serde = ["kv_unstable_std", "value-bag/serde", "serde"]
+ kv_unstable_std = ["std", "kv_unstable", "value-bag/error"]
+-kv_unstable_sval = ["kv_unstable", "value-bag/sval", "sval"]
++kv_unstable_sval = ["kv_unstable"]#, "value-bag/sval", "sval"]
  max_level_debug = []
  max_level_error = []
  max_level_info = []
diff --git a/src/opener/debian/patches/disable-vendor.patch b/src/opener/debian/patches/disable-vendor.patch
index 4ab5feee..2de09d07 100644
--- a/src/opener/debian/patches/disable-vendor.patch
+++ b/src/opener/debian/patches/disable-vendor.patch
@@ -1,30 +1,52 @@
---- a/src/lib.rs
-+++ b/src/lib.rs
-@@ -14,7 +14,7 @@
- //!
- //! ## Platform Implementation Details
- //! On Windows the `ShellExecuteW` Windows API function is used. On Mac the system `open` command is
--//! used. On other platforms, the `xdg-open` script is used. The system `xdg-open` is not used;
-+//! used. On other platforms, the system `xdg-open` script is used.
- //! instead a version is embedded within this library.
+--- a/src/linux_and_more.rs
++++ b/src/linux_and_more.rs
+@@ -1,11 +1,8 @@
+ use crate::OpenError;
+ use std::ffi::OsStr;
+-use std::io::Write;
+ use std::process::{Child, Command, Stdio};
+ use std::{fs, io};
  
- #![warn(
-@@ -167,14 +167,12 @@
+-const XDG_OPEN_SCRIPT: &[u8] = include_bytes!("xdg-open");
+-
+ pub(crate) fn open(path: &OsStr) -> Result<(), OpenError> {
+     if crate::is_wsl() {
+         wsl_open(path)
+@@ -26,10 +23,7 @@
+ }
  
- #[cfg(not(any(target_os = "windows", target_os = "macos")))]
- fn open_sys(path: &OsStr) -> Result<(), OpenError> {
--    const XDG_OPEN_SCRIPT: &[u8] = include_bytes!("xdg-open");
+ fn non_wsl_open(path: &OsStr) -> Result<(), OpenError> {
+-    if open_with_system_xdg_open(path).is_err() {
+-        open_with_internal_xdg_open(path)?;
+-    }
 -
-     open_not_windows(
--        "sh",
-+        "xdg-open",
-         path,
--        &["-s"],
--        Some(XDG_OPEN_SCRIPT),
--        "xdg-open (internal)",
-+        &[],
-+        None,
-+        "xdg-open",
-     )
++    open_with_system_xdg_open(path).map_err(OpenError::Io)?;
+     Ok(())
+ }
+ 
+@@ -58,25 +52,6 @@
+         .spawn()
  }
  
+-fn open_with_internal_xdg_open(path: &OsStr) -> Result<Child, OpenError> {
+-    let mut sh = Command::new("sh")
+-        .arg("-s")
+-        .arg(path)
+-        .stdin(Stdio::piped())
+-        .stdout(Stdio::null())
+-        .stderr(Stdio::null())
+-        .spawn()
+-        .map_err(OpenError::Io)?;
+-
+-    sh.stdin
+-        .as_mut()
+-        .unwrap()
+-        .write_all(XDG_OPEN_SCRIPT)
+-        .map_err(OpenError::Io)?;
+-
+-    Ok(sh)
+-}
+-
+ pub(crate) fn is_wsl() -> bool {
+     if is_docker() {
+         return false;
diff --git a/src/openssl/debian/patches/disable-vendor.patch b/src/openssl/debian/patches/disable-vendor.patch
index ea37ca5a..1ddc0c39 100644
--- a/src/openssl/debian/patches/disable-vendor.patch
+++ b/src/openssl/debian/patches/disable-vendor.patch
@@ -1,8 +1,8 @@
 --- a/Cargo.toml
 +++ b/Cargo.toml
-@@ -51,4 +51,4 @@
+@@ -50,4 +50,4 @@
  v102 = []
  v110 = []
  v111 = []
--vendored = ["openssl-sys/vendored"]
+-vendored = ["ffi/vendored"]
 +vendored = []
diff --git a/src/pkg-config/debian/patches/debian-auto-cross-compile.patch b/src/pkg-config/debian/patches/debian-auto-cross-compile.patch
index e7f2d09e..3eda51a3 100644
--- a/src/pkg-config/debian/patches/debian-auto-cross-compile.patch
+++ b/src/pkg-config/debian/patches/debian-auto-cross-compile.patch
@@ -1,15 +1,16 @@
 --- a/src/lib.rs
 +++ b/src/lib.rs
-@@ -399,7 +389,11 @@ impl Config {
+@@ -379,7 +379,12 @@
      fn command(&self, name: &str, args: &[&str]) -> Command {
          let exe = self
-             .env_var_os("PKG_CONFIG")
+             .targetted_env_var("PKG_CONFIG")
 -            .unwrap_or_else(|| OsString::from("pkg-config"));
 +            .unwrap_or_else(|| {
 +                self.env_var_os("DEB_HOST_GNU_TYPE")
 +                    .map(|mut t| { t.push(OsString::from("-pkg-config")); t })
 +                    .unwrap_or_else(|| OsString::from("pkg-config"))
 +            });
++
          let mut cmd = Command::new(exe);
          if self.is_static(name) {
              cmd.arg("--static");
diff --git a/src/pkg-config/debian/patches/no-special-snowflake-env.patch b/src/pkg-config/debian/patches/no-special-snowflake-env.patch
index 22e12a76..a1113d5f 100644
--- a/src/pkg-config/debian/patches/no-special-snowflake-env.patch
+++ b/src/pkg-config/debian/patches/no-special-snowflake-env.patch
@@ -1,39 +1,47 @@
 --- a/src/lib.rs
 +++ b/src/lib.rs
-@@ -9,8 +9,6 @@
- //! A number of environment variables are available to globally configure how
- //! this crate will invoke `pkg-config`:
- //!
--//! * `PKG_CONFIG_ALLOW_CROSS` - if this variable is not set, then `pkg-config`
--//!   will automatically be disabled for all cross compiles.
+@@ -12,13 +12,6 @@
  //! * `FOO_NO_PKG_CONFIG` - if set, this will disable running `pkg-config` when
  //!   probing for the library named `foo`.
  //!
-@@ -106,9 +104,8 @@ pub enum Error {
-     /// Contains the name of the responsible environment variable.
+-//! * `PKG_CONFIG_ALLOW_CROSS` - The `pkg-config` command usually doesn't
+-//!   support cross-compilation, and this crate prevents it from selecting
+-//!   incompatible versions of libraries.
+-//!   Setting `PKG_CONFIG_ALLOW_CROSS=1` disables this protection, which is
+-//!   likely to cause linking errors, unless `pkg-config` has been configured
+-//!   to use appropriate sysroot and search paths for the target platform.
+-//!
+ //! There are also a number of environment variables which can configure how a
+ //! library is linked to (dynamically vs statically). These variables control
+ //! whether the `--static` flag is passed. Note that this behavior can be
+@@ -112,10 +105,7 @@
      EnvNoPkgConfig(String),
  
--    /// Cross compilation detected.
+     /// Detected cross compilation without a custom sysroot.
 -    ///
--    /// Override with `PKG_CONFIG_ALLOW_CROSS=1`.
-+    /// Cross compilation detected. Kept for compatibility;
-+    /// the Debian package never emits this.
+-    /// Ignore the error with `PKG_CONFIG_ALLOW_CROSS=1`,
+-    /// which may let `pkg-config` select libraries
+-    /// for the host's architecture instead of the target's.
++    /// Kept for compatibility; the Debian package never emits this.
      CrossCompilation,
  
      /// Failed to run `pkg-config`.
-@@ -152,11 +145,6 @@ impl fmt::Display for Error {
+@@ -139,14 +129,6 @@
      fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
          match *self {
              Error::EnvNoPkgConfig(ref name) => write!(f, "Aborted because {} is set", name),
--            Error::CrossCompilation => write!(
--                f,
--                "Cross compilation detected. \
--                 Use PKG_CONFIG_ALLOW_CROSS=1 to override"
+-            Error::CrossCompilation => f.write_str(
+-                "pkg-config has not been configured to support cross-compilation.
+-
+-                Install a sysroot for the target platform and configure it via
+-                PKG_CONFIG_SYSROOT_DIR and PKG_CONFIG_PATH, or install a
+-                cross-compiling wrapper for pkg-config and set it via
+-                PKG_CONFIG environment variable.",
 -            ),
              Error::Command {
                  ref command,
                  ref cause,
-@@ -180,7 +168,7 @@ impl fmt::Display for Error {
+@@ -170,7 +152,7 @@
                  }
                  Ok(())
              }
@@ -42,7 +50,7 @@
          }
      }
  }
-@@ -341,6 +329,8 @@ impl Config {
+@@ -336,6 +318,8 @@
          if host == target {
              return true;
          }
@@ -53,7 +61,7 @@
          // a wrapper script that sets up platform-specific prefixes.
 --- a/tests/test.rs
 +++ b/tests/test.rs
-@@ -34,7 +34,6 @@ fn find(name: &str) -> Result<pkg_config
+@@ -34,7 +34,6 @@
      pkg_config::probe_library(name)
  }
  
@@ -61,7 +69,7 @@
  fn cross_disabled() {
      let _g = LOCK.lock();
      reset();
-@@ -46,7 +45,6 @@ fn cross_disabled() {
+@@ -46,7 +45,6 @@
      }
  }
  
diff --git a/src/rand/debian/patches/series b/src/rand/debian/patches/series
index 3dbc998e..e69de29b 100644
--- a/src/rand/debian/patches/series
+++ b/src/rand/debian/patches/series
@@ -1 +0,0 @@
-Remove-__m64-support.diff
diff --git a/src/redox-syscall/debian/patches/no-nightly.patch b/src/redox-syscall/debian/patches/no-nightly.patch
index 0ecf4f5b..462a724b 100644
--- a/src/redox-syscall/debian/patches/no-nightly.patch
+++ b/src/redox-syscall/debian/patches/no-nightly.patch
@@ -1,6 +1,3 @@
-diff --git a/build.rs b/build.rs
-new file mode 100644
-index 0000000..ca906fa
 --- /dev/null
 +++ b/build.rs
 @@ -0,0 +1,9 @@
@@ -13,19 +10,16 @@ index 0000000..ca906fa
 +        }
 +    }
 +}
-diff --git a/src/lib.rs b/src/lib.rs
-index 6b8d130..42526f0 100644
 --- a/src/lib.rs
 +++ b/src/lib.rs
 @@ -1,5 +1,5 @@
+ #![feature(asm)]
 -#![feature(llvm_asm)]
--#![feature(const_fn)]
 +#![cfg_attr(nightly, feature(llvm_asm))]
-+#![cfg_attr(nightly, feature(const_fn))]
  #![cfg_attr(not(test), no_std)]
  
  #[cfg(test)]
-@@ -10,6 +10,7 @@ pub use self::call::*;
+@@ -10,6 +10,7 @@
  pub use self::data::*;
  pub use self::error::*;
  pub use self::flag::*;
@@ -33,7 +27,7 @@ index 6b8d130..42526f0 100644
  pub use self::io::*;
  pub use self::number::*;
  pub use self::scheme::*;
-@@ -47,6 +48,7 @@ pub mod error;
+@@ -51,6 +52,7 @@
  pub mod flag;
  
  /// Functions for low level hardware control
diff --git a/src/regex-automata/debian/patches/ignore-std-tests.patch b/src/regex-automata/debian/patches/ignore-std-tests.patch
index 97c7655d..2d79b759 100644
--- a/src/regex-automata/debian/patches/ignore-std-tests.patch
+++ b/src/regex-automata/debian/patches/ignore-std-tests.patch
@@ -18,27 +18,6 @@
      /// use regex_automata::{DFA, DenseDFA};
      ///
      /// # fn example() -> Result<(), regex_automata::Error> {
-@@ -2246,6 +2246,7 @@
-     String::from_utf8(ascii::escape_default(b).collect::<Vec<_>>()).unwrap()
- }
- 
-+#[cfg(feature = "std")]
- #[cfg(test)]
- #[allow(dead_code)]
- mod tests {
---- a/tests/tests.rs
-+++ b/tests/tests.rs
-@@ -10,7 +10,10 @@
- extern crate serde_derive;
- extern crate toml;
- 
-+#[cfg(feature = "std")]
- mod collection;
-+#[cfg(feature = "std")]
- mod regression;
-+#[cfg(feature = "std")]
- mod suite;
- mod unescape;
 --- a/src/dfa.rs
 +++ b/src/dfa.rs
 @@ -78,7 +78,7 @@
@@ -171,7 +150,7 @@
      /// use regex_automata::Regex;
      ///
      /// # fn example() -> Result<(), regex_automata::Error> {
-@@ -342,7 +342,7 @@
+@@ -339,7 +339,7 @@
      /// would involve serializing `initial_re` somewhere and then deserializing
      /// it later to build a regex.
      ///
@@ -180,7 +159,7 @@
      /// use regex_automata::Regex;
      ///
      /// # fn example() -> Result<(), regex_automata::Error> {
-@@ -358,7 +358,7 @@
+@@ -355,7 +355,7 @@
      /// This example shows how you might build smaller DFAs, and then use those
      /// smaller DFAs to build a new regex.
      ///
@@ -189,7 +168,7 @@
      /// use regex_automata::Regex;
      ///
      /// # fn example() -> Result<(), regex_automata::Error> {
-@@ -375,7 +375,7 @@
+@@ -372,7 +372,7 @@
      /// This example shows how to build a `Regex` that uses sparse DFAs instead
      /// of dense DFAs:
      ///
diff --git a/src/regex/debian/patches/series b/src/regex/debian/patches/series
index 2bc648b9..e69de29b 100644
--- a/src/regex/debian/patches/series
+++ b/src/regex/debian/patches/series
@@ -1 +0,0 @@
-relax-test-dep.diff
diff --git a/src/unicode-bidi/debian/patches/no-flamegraphs.patch b/src/unicode-bidi/debian/patches/no-flamegraphs.patch
index 6234d5da..abef3cbb 100644
--- a/src/unicode-bidi/debian/patches/no-flamegraphs.patch
+++ b/src/unicode-bidi/debian/patches/no-flamegraphs.patch
@@ -1,23 +1,24 @@
---- a/Cargo.toml	2017-07-06 23:45:07.000000000 +0000
-+++ b/Cargo.toml	2018-09-15 18:09:13.913086470 +0000
-@@ -23,13 +23,6 @@
+--- a/Cargo.toml
++++ b/Cargo.toml
+@@ -25,13 +25,6 @@
  
  [lib]
  name = "unicode_bidi"
 -[dependencies.flame]
--version = "0.1"
+-version = "0.2"
 -optional = true
 -
 -[dependencies.flamer]
--version = "0.1"
+-version = "0.4"
 -optional = true
  
- [dependencies.matches]
- version = "0.1"
-@@ -44,6 +37,5 @@
+ [dependencies.serde]
+ version = ">=0.8, <2.0"
+@@ -44,7 +37,6 @@
  [features]
  bench_it = []
- default = []
+ default = ["std"]
 -flame_it = ["flame", "flamer"]
+ std = []
  unstable = []
  with_serde = ["serde"]
